name: Run Operator Unit Tests
on: [push, pull_request, workflow_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
  GO111MODULE: "on"
  GOPROXY: "https://proxy.golang.org"
  KUBERNETES_VERSION: "v1.17.3"
  USE_MINIKUBE_DOCKER_ENV: "true" 

jobs:
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Deploy Dependencies
        id: deploy
        run: |
          bash .travis/install-tools.sh
          bash .travis/install-python.sh

      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          cpus: 'max'
          memory: 'max'
      
  

      - name: Run Generate API
        id: run-gen-api
        run: make gen-api-fail-if-dirty --always-make || exit 1

      - name: Run Build
        id: run-build
        run: eval $(minikube docker-env) && make build || exit 1

      - name: Run Test
        id: run-test
        run: make test || exit 1

      - name: Run Test OLM
        id: run-test-olm
        run: eval $(minikube docker-env) && make test-olm || exit 1

  run-cli-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Deploy Dependencies
        id: deploy
        run: |
          bash .travis/install-tools.sh
          bash .travis/install-python.sh

      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          cpus: 'max'
          memory: 'max'
      
      - name: Run Build CLI
        id: run-build-cli
        run: make cli || exit 1

      - name: Run Build Image
        id: run-build-image
        run: eval $(minikube docker-env) && make image || exit 1

      - name: Run Test CLI
        id: run-test-cli
        run: make test-cli-flow || exit 1

      - name: Collect logs
        if: ${{ failure() }}
        run: |
          set -x
          ./build/_output/bin/noobaa-operator diagnostics collect --db-dump --dir=tests-logs -n test

      - name: Save logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-logs
          path: ./tests-logs

        # Uncomment this step in case where you want to connect to the VM of this workflow using SSH.
        # Pay attention that this workflow was configured with a timeout, and you might change it for this step.
        # - name: Setup tmate session
        #   if: ${{ failure() }}
        #   uses: mxschmitt/action-tmate@v3


  run-core-config-map-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Deploy Dependencies
        id: deploy
        run: |
          bash .travis/install-tools.sh
          bash .travis/install-python.sh


      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          cpus: 'max'
          memory: 'max'
  

      - name: Run Build CLI
        id: run-build-cli
        run: make cli || exit 1

      - name: Run Build Image
        id: run-build-image
        run: eval $(minikube docker-env) && make image || exit 1

      - name: Run Test Core config map
        id: run-test-core-config-map-flow
        run: make test-core-config-map-flow || exit 1
